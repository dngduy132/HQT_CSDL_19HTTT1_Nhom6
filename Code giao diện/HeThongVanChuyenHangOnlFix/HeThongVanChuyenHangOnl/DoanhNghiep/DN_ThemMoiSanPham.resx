<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>